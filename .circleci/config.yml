---
version: 2.1

#
# CircleCI executors
#
executors:
  python-image:
    docker:
      - image: python:3.7
  postgres-image:
    docker:
      - image: postgres:9.6
        environment:
          SHLVL: 1
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb


#
# CircleCI commands
#
commands:
  setup-python-image-command:
    description: "steps to set up python-image executor"
    steps:
      - run:
          name: Install libraries
          command: |
            apt-get update -y \
                && apt-get install -y build-essential yamllint shellcheck jq
      - run:
          name: Set up the environment
          command: |
            pip install --no-cache-dir --force-reinstall -r "./ci/requirements.txt"

  setup-postgres-image-command:
    parameters:
      pyenv_git_tag:
        type: string
        default: "v1.2.21"
      python_version:
        type: string
        default: "3.7.8"
    description: "steps to set up postgres-image executor"
    steps:
      - run:
          name: Install libraries
          command: |
            apt-get update -y \
                && apt-get install -y git gcc build-essential libbz2-dev libdb-dev \
                       libreadline-dev libffi-dev libgdbm-dev liblzma-dev \
                       libncursesw5-dev libsqlite3-dev libssl-dev \
                       zlib1g-dev uuid-dev tk-dev curl wget
      - run:
          name: Install pyenv
          command: |
            # Download pyenv
            git clone -b << parameters.pyenv_git_tag >> --depth 1 \
                https://github.com/pyenv/pyenv.git "${HOME}/.pyenv"
            # Register environment variables
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> $BASH_ENV
      - run:
          name: Install python
          command: |
            pyenv install << parameters.python_version >>
            pyenv global << parameters.python_version >>
            pyenv rehash
      - run:
          name: Set up the environment
          command: |
            pip install --no-cache-dir --force-reinstall -r "./ci/requirements.txt"

#
# jobs
#
jobs:
  unit-tests:
    executor: python-image
    steps:
      - checkout
      - setup-python-image-command
      - run:
          name: Validate bash scripts
          command: |
            bash ./ci/lint_bash.sh
      - run:
          name: Validate YAML files
          command: |
            bash ./ci/lint_yaml.sh

  integration-tests-postgres:
    executor: postgres-image
    steps:
      - checkout
      - setup-postgres-image-command
      - run:
          name: Run tox
          command: |
            tox

#
# Workflows
#
workflows:
  test:
    jobs:
      - unit-tests:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - integration-tests-postgres:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
